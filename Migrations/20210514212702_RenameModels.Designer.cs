// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using time_tracker.DataBase;

namespace time_tracker.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20210514212702_RenameModels")]
    partial class RenameModels
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("time_tracker.Models.CompanySectionModel", b =>
                {
                    b.Property<int>("CompanySectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CompanySectionName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("CompanySectionName");

                    b.HasKey("CompanySectionId");

                    b.ToTable("CompanySection", "TimeTracker");
                });

            modelBuilder.Entity("time_tracker.Models.CompanySubSectionModel", b =>
                {
                    b.Property<int>("CompanySubSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanySectionModelCompanySectionId")
                        .HasColumnType("int");

                    b.Property<string>("SubSectionName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("SubSectionName");

                    b.HasKey("CompanySubSectionId");

                    b.HasIndex("CompanySectionModelCompanySectionId");

                    b.ToTable("CompanySubSection", "TimeTracker");
                });

            modelBuilder.Entity("time_tracker.Models.CompanyTeamModel", b =>
                {
                    b.Property<int>("CompanySubSectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanySubSectionModelCompanySubSectionId")
                        .HasColumnType("int");

                    b.Property<string>("CompanyTeamName")
                        .IsRequired()
                        .HasColumnType("varchar")
                        .HasColumnName("CompanyTeamName");

                    b.HasKey("CompanySubSectionId");

                    b.HasIndex("CompanySubSectionModelCompanySubSectionId");

                    b.ToTable("CompanyTeam", "TimeTracker");
                });

            modelBuilder.Entity("time_tracker.Models.UserModel", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CompanySectionId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanySubSectionId")
                        .HasColumnType("int");

                    b.Property<int?>("CompanyTeamModelCompanySubSectionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("EmailAddress");

                    b.Property<string>("FirstName")
                        .HasMaxLength(30)
                        .HasColumnType(" varchar(30)")
                        .HasColumnName("FirstName");

                    b.Property<string>("LastName")
                        .HasMaxLength(30)
                        .HasColumnType(" varchar(30)")
                        .HasColumnName("LastName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("Password");

                    b.Property<string>("Team")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("Team");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("UserName");

                    b.HasKey("UserId");

                    b.HasIndex("CompanyTeamModelCompanySubSectionId");

                    b.ToTable("User", "TimeTracker");
                });

            modelBuilder.Entity("time_tracker.Models.CompanySubSectionModel", b =>
                {
                    b.HasOne("time_tracker.Models.CompanySectionModel", null)
                        .WithMany("SubSections")
                        .HasForeignKey("CompanySectionModelCompanySectionId");
                });

            modelBuilder.Entity("time_tracker.Models.CompanyTeamModel", b =>
                {
                    b.HasOne("time_tracker.Models.CompanySubSectionModel", null)
                        .WithMany("Teams")
                        .HasForeignKey("CompanySubSectionModelCompanySubSectionId");
                });

            modelBuilder.Entity("time_tracker.Models.UserModel", b =>
                {
                    b.HasOne("time_tracker.Models.CompanyTeamModel", null)
                        .WithMany("Users")
                        .HasForeignKey("CompanyTeamModelCompanySubSectionId");
                });

            modelBuilder.Entity("time_tracker.Models.CompanySectionModel", b =>
                {
                    b.Navigation("SubSections");
                });

            modelBuilder.Entity("time_tracker.Models.CompanySubSectionModel", b =>
                {
                    b.Navigation("Teams");
                });

            modelBuilder.Entity("time_tracker.Models.CompanyTeamModel", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
